import { DomHandler } from 'domhandler';
import { Parser } from 'htmlparser2';
import serialize from 'dom-serializer';

// Function to adjust paths in HTML
export function adjustHtmlLinks(html: string, basePath: string): string {
    const handler = new DomHandler();
    const parser = new Parser(handler);
    
    // Parse the HTML content
    parser.write(html);
    parser.end();
    
    const document = handler.dom;

    function updatePaths(nodes: any) {
        nodes.forEach((node: any) => {
            if (node.type === 'tag') {
                const attributes = node.attribs || {};

                if (node.name === 'img' || node.name === 'link' || node.name === 'script') {
                    console.log(basePath)

                    if (attributes.src) {
                        attributes.src = attributes.src.replace(/^\/(.+)/, `${basePath}/$1`);
                        console.log(attributes.src )
                    }
                    if (attributes.href) {
                        attributes.href = attributes.href.replace(/^\/(.+)/, `${basePath}/$1`);
                    }
                }

                // Recursively process child nodes
                if (node.children && node.children.length > 0) {
                    updatePaths(node.children);
                }
            }
        });
    }

    // Start updating paths from the root of the document
    updatePaths(document);

    // Convert the DOM back to HTML
    const updatedHtml = serialize(document);
    return updatedHtml;
}